@using LCWeb.Shared.DTOs.MaintenanceDTO
@inject IClientVendorMaintenanceService ClientVendorMaintenanceService

<InputDesign />

<MudDialog>
    <DialogContent>

        <div class="px-sm-2 mt-n4 px-1 pb-4 form-div">
            @if (Id == null)
            {
                <DialogHeader title="ADD USER" icon="@Icons.Material.Filled.Add" />
            }
            else
            {
                <DialogHeader title="EDIT USER" icon="@Icons.Material.Filled.Edit" />
            }

            <div class="mt-3">
                <form @onsubmit="HandleSubmit">
                    <div class="main-input-cont">
                        <label class="d-flex">Username <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <input type="text" @bind="payload.Username" placeholder="sample username">
                    </div>
                    <div class="main-input-cont">
                        <label for="password" class="d-flex">Password <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <MudTextField @bind-Value="payload.Password"
                            Placeholder="******"
                            Variant="Variant.Outlined"
                            InputType="@PasswordInput"
                            Margin="Margin.Dense"
                            Adornment="Adornment.End"
                            Class="w-100 mb-3"
                            Style="margin-top: -3px;"
                            AdornmentIcon="@PasswordInputIcon"
                            OnAdornmentClick="ShowPassword" />
                    </div>
                    <div class="main-input-cont">
                        <label for="password" class="d-flex">Confirm Password <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <MudTextField @bind-Value="payload.ConfirmPass"
                            Placeholder="******"
                            Variant="Variant.Outlined"
                            InputType="@ConfPasswordInput"
                            Margin="Margin.Dense"
                            Adornment="Adornment.End"
                            Class="w-100 mb-3"
                            Style="margin-top: -3px;"
                            AdornmentIcon="@ConfPasswordInputIcon"
                            OnAdornmentClick="ShowConfirmPassword" />
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex">First Name <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <input type="text" @bind="payload.UserFirstName" placeholder="sample first name">
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex">Last Name <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <input type="text" @bind="payload.UserLastName" placeholder="sample first name">
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex">Role <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <select @bind="payload.Role">
                            <option value="0" disabled>--Select Role--</option>
                            @foreach (UserRoles type in Enum.GetValues(typeof(UserRoles)))
                            {
                                <option value="@type">@type</option>
                            }
                        </select>
                    </div>
                    <div class="main-input-cont">
                        <label class="d-flex">Status <label class="ml-1" style="color: #FF4F53;">*</label></label>
                        <MudRadioGroup @bind-Value="payload.IsActive">
                            <MudRadio Value="true" Color="Color.Primary" UncheckedColor="Color.Default">ACTIVE</MudRadio>
                            <MudRadio Value="false" Color="Color.Info" UncheckedColor="Color.Default">INACTIVE</MudRadio>
                        </MudRadioGroup>
                    </div>
                    <div class="d-flex justify-content-end gap-2">
                        <SubmitButton isLoading="isLoading" button_name="SAVE" className="submit-btn" />
                        <SubmitButton type="button" button_name="REFRESH" className="def-btn" OnClick="Refresh" />
                    </div>
                </form>
            </div>

        </div>
    </DialogContent>
</MudDialog>

@code {

    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = new MudDialogInstance();

    [Parameter] public int? Id { get; set; }

    [Parameter] public RegisterDTO? payload { get; set; } = new RegisterDTO();

    public GetVendorMaintenanceDTO? ResponseData = new GetVendorMaintenanceDTO();

    public bool isLoading = false;

    bool isShowPass;

    bool isShowConfPass;

    InputType PasswordInput = InputType.Password;

    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    
    InputType ConfPasswordInput = InputType.Password;

    string ConfPasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnParametersSetAsync()
    {
        // if (Id != null)
        // {
        //     ResponseData = await ClientVendorMaintenanceService.GetSingleVendor((int)Id);

        //     payload.Code = ResponseData.Code;
        //     payload.Description = ResponseData.Description;
        //     payload.Address1 = ResponseData.Address1;
        //     payload.Address2 = ResponseData.Address2;
        //     payload.Address3 = ResponseData.Address3;
        // }
        // else
        // {
        //     payload = new CreateVendorMaintenanceDTO();
        // }
    }

    void ShowPassword()
    {
        @if (isShowPass)
        {
            isShowPass = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShowPass = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    void ShowConfirmPassword()
    {
        @if (isShowConfPass)
        {
            isShowConfPass = false;
            ConfPasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            ConfPasswordInput = InputType.Password;
        }
        else
        {
            isShowConfPass = true;
            ConfPasswordInputIcon = Icons.Material.Filled.Visibility;
            ConfPasswordInput = InputType.Text;
        }
    }

    private void Refresh()
    {
        payload = new RegisterDTO();
    }

    void HandleSubmit()
    {
        MudDialog.Close(DialogResult.Ok(payload));
    }

}
